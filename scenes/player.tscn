[gd_scene load_steps=7 format=3 uid="uid://bj304e8bv7ygw"]

[ext_resource type="Texture2D" uid="uid://cgcwkmgtsb2ea" path="res://assets/player/Prototype_Character.png" id="1_3ra3r"]

[sub_resource type="GDScript" id="GDScript_ecfjc"]
script/source = "class_name Player extends CharacterBody2D

@onready var raft : Raft = get_tree().get_first_node_in_group(\"Raft\")
@export var move_speed: float = 100.0
var interact_radius : float = 200.0

func _draw():
	draw_circle(position, interact_radius, Color(\"red\"), false, 1.0)

func _input(event):
	#print(event.as_text())
	
	if event.is_action_pressed(\"move_left\"):
		print(\"move_left\")
	elif event.is_action_released(\"move_left\"):
		print(\"end move_left\")
	elif event.is_action_pressed(\"move_right\"):
		print(\"move_right\")
	elif event.is_action_released(\"move_right\"):
		print(\"end move_right\")
	elif event.is_action_pressed(\"move_up\"):
		print(\"move_up\")
	elif event.is_action_released(\"move_up\"):
		print(\"end move_up\")
	elif event.is_action_pressed(\"move_down\"):
		print(\"move_down\")
	elif event.is_action_released(\"move_down\"):
		print(\"end move_down\")
	elif event.is_action_pressed(\"drop_anchor\"):
		print(\"drop_anchor\")
		_deploy_anchor()
	elif event.is_action_released(\"drop_anchor\"):
		print(\"end drop_anchor\")
	

func _deploy_anchor() -> void:
	var anchor_scene : PackedScene = preload(\"res://scenes/anchor.tscn\")
	var anchor : Anchor = anchor_scene.instantiate()
	anchor.position = position
	get_parent().add_child(anchor)
	
	if anchor.has_method(\"_activate\"):
		anchor._activate()

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	raft.moved.connect(_move_player)

func _move_player(v: Vector2) -> void:
	
	velocity = v
	move_and_slide()
	queue_redraw()

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _physics_process(delta: float) -> void:
	var x_direction: float = Input.get_axis(\"move_left\", \"move_right\")
	var y_direction: float = Input.get_axis(\"move_up\", \"move_down\")
	
	#for _i in self.get_children():
	#	print(_i)
	
	velocity.x = x_direction * move_speed
	velocity.y = y_direction * move_speed
	
	#print(player_body.velocity)
	print(\"player position\")
	print(position)
	print(\"collision position\")
	print($CollisionShape2D.position)
	
	move_and_slide()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_365ny"]
size = Vector2(42, 10)

[sub_resource type="AtlasTexture" id="AtlasTexture_5g71m"]
atlas = ExtResource("1_3ra3r")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_atw5u"]
atlas = ExtResource("1_3ra3r")
region = Rect2(32, 0, 32, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_qe66k"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5g71m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_atw5u")
}],
"loop": true,
"name": &"idle",
"speed": 2.0
}]

[node name="Player" type="CharacterBody2D"]
collision_layer = 4
collision_mask = 4
motion_mode = 1
script = SubResource("GDScript_ecfjc")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_365ny")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_qe66k")
animation = &"idle"
autoplay = "idle"
frame_progress = 0.389005

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(0, 8)
zoom = Vector2(2, 2)
